{"version":3,"sources":["images/logo.svg","components/Header.js","images/close.svg","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/Card.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","PopupWtihForm","props","popupClassName","isOpen","id","close","onClick","onClose","title","name","children","ImagePopup","selectedCard","link","api","fetch","headers","authorization","then","res","ok","json","Promise","reject","Error","status","catch","err","message","userName","userAbout","method","body","JSON","stringify","about","Card","style","backgroundImage","card","onCardClick","likes","length","Main","React","useState","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","data","avatar","getCards","ReactDOM","render","map","document","querySelector","onEditProfile","onAddPlace","isAddPlacePopupOpen","type","placeholder","disabled","isEditProfilePopupOpen","autoComplete","App","setIsEditProfilePopupOpen","setIsAddPlacePopupOpen","setSelectedCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6186c026.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fad4f8a5.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return(\r\n    <header className=\"header root__section\">\r\n      <img src={logo} alt=\"mesto logo\" className=\"logo\" />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/close.8a65f75d.svg\";","import close from '../images/close.svg';\r\n\r\nfunction PopupWtihForm(props) {\r\n    let popupClassName = 'popup';\r\n    if (props.isOpen) {\r\n        popupClassName += ' popup_is-opened';\r\n    }\r\n\r\n    return(\r\n        <div className={popupClassName} id={props.id}>\r\n            <div className=\"popup__content\">\r\n                <img src={close} alt=\"\" className=\"popup__close\" id=\"close-new-place\" onClick={props.onClose}/>\r\n                <h3 className=\"popup__title\">{props.title}</h3>\r\n                <form className=\"popup__form\" name={props.name}>\r\n                    {props.children}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PopupWtihForm;","import close from '../images/close.svg';\r\n\r\nfunction ImagePopup(props) {\r\n  let popupClassName = 'popup';\r\n  if (props.selectedCard) {\r\n      popupClassName += ' popup_is-opened';\r\n  }\r\n\r\n  return(\r\n      <div className={popupClassName} id=\"popup-picture\">\r\n        <div className=\"popup__picture\">\r\n          <img src={close} alt=\"\" className=\"popup__close\" id=\"close-picture\" onClick={props.onClose}/>\r\n          <img src={props.selectedCard.link} alt=\"\" className=\"popup__image\" />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","export class Api {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch('https://nomoreparties.co/cohort10/users/me', {\r\n            headers: {\r\n                authorization: '7a45e0e5-9273-458c-8551-b84f43589b7b'\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) return res.json();\r\n            return Promise.reject(new Error(res.status));\r\n        })\r\n        .catch((err) => Promise.reject(new Error(err.message)));\r\n    }\r\n\r\n    getCards() {\r\n        return fetch('https://nomoreparties.co/cohort10/cards', {\r\n            headers: {\r\n                authorization: '7a45e0e5-9273-458c-8551-b84f43589b7b'\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) return res.json();\r\n            return Promise.reject(new Error(res.status));\r\n        })\r\n        .catch((err) => Promise.reject(new Error(err.message)));\r\n    }\r\n\r\n    patchUserInfo(userName, userAbout) {\r\n        return fetch('https://nomoreparties.co/cohort10/users/me', {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: '7a45e0e5-9273-458c-8551-b84f43589b7b',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: `${userName}`,\r\n                about: `${userAbout}`\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) return  res.json();\r\n            return Promise.reject(new Error(res.status));\r\n        })\r\n        .catch((err) => Promise.reject(new Error(err.message)));\r\n    }\r\n\r\n    postNewCard(name, link) {\r\n        return fetch('https://nomoreparties.co/cohort10/cards', {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: '7a45e0e5-9273-458c-8551-b84f43589b7b',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: `${name}`,\r\n                link: `${link}`\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) return res.json();\r\n            return Promise.reject(new Error(res.status));\r\n        })\r\n        .catch((err) => Promise.reject(new Error(err.message)));\r\n    }\r\n\r\n}\r\n\r\nconst api = new Api();\r\nexport default api;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    } \r\n\r\n    return(\r\n        <div className='place-card'>\r\n                <div className='place-card__image' style={{backgroundImage: `url(${props.card.link})`}} onClick={handleClick}>\r\n                <button className='place-card__delete-icon' />\r\n                </div>\r\n                <div className='place-card__description'>\r\n                <h3 className='place-card__name'>{props.card.name}</h3>\r\n                <div className='place-card__like-container'>\r\n                    <button className='place-card__like-icon' />\r\n                    <p className='place-card__like-counter'>{props.card.likes.length}</p>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport close from '../images/close.svg';\r\nimport PopupWtihForm from './PopupWithForm.js'; //Компонент любого попапа, все внутреннее наполнение передаётся через children\r\nimport ImagePopup from './ImagePopup.js'; //Компонент попапа с картинкой\r\nimport api from '../utils/Api.js'; //В Api.js создаём экземпляр *const api = new Api()* и передаём его сюда\r\nimport Card from './Card.js';\r\n\r\nfunction Main(props) {\r\n    //Хуки обновляют имя пользователя и описание\r\n    const [userName, setUserName] = React.useState('Мой дед');\r\n    const [userDescription, setUserDescription] = React.useState('Sailor, Researcher');\r\n    const [userAvatar, setUserAvatar] = React.useState('../../../images/avatar.jpg'); //По умолчанию используем путь до аватара в локальной папке\r\n    const [cards, setCards] = React.useState([]); //Стэйт с массивом карточек, изначально пустым\r\n    //Эффект, который при монтировании Main отправляет запрос к апи, получает инфу пользователя и карточки\r\n\r\n    React.useEffect(() => {\r\n      //Запрашиваем данные пользователя\r\n      api.getUserInfo()\r\n        .then((data) => {\r\n          //Если дата пришла, использует сеттеры, которые обновляют данные о пользователе\r\n          setUserName(data.name);\r\n          setUserDescription(data.about);\r\n          setUserAvatar(data.avatar);\r\n        });\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n      api.getCards()\r\n        .then((data) => {\r\n          setCards(data);\r\n        })\r\n    }, []); \r\n\r\n    React.useEffect(() => {\r\n      ReactDOM.render((\r\n        <>\r\n          {cards.map((card) => {\r\n            return(\r\n              <Card card={card} onCardClick={props.onCardClick}/>\r\n          )\r\n        })}\r\n        \r\n        </>\r\n      ), document.querySelector('.places-list'))\r\n    });\r\n\r\n\r\n    \r\n    return(\r\n      <>  \r\n        <div className=\"profile root__section\">\r\n        <div className=\"user-info\">\r\n          <div className=\"user-info__photo\" style={{ backgroundImage: `url(${userAvatar})` }} ></div> {/*Подставляем в стиль фоновое изображение - это аватар пользователя, его тоже обновляем при монтировании*/}\r\n          <div className=\"user-info__data\">\r\n            <h1 className=\"user-info__name\">{userName}</h1> {/*Используем переменные состояния, обновляемые в useEffect, здесь*/}\r\n            <p className=\"user-info__job\">{userDescription}</p> {/* и ещё здесь */}\r\n            <button className=\"button user-info__edit\" onClick={props.onEditProfile}>Edit</button>\r\n          </div>\r\n          <button className=\"button user-info__button\" onClick={props.onAddPlace}>+</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"places-list root__section\">\r\n        \r\n      </div>\r\n\r\n      <PopupWtihForm id='popup-add' title='Новое место' isOpen={props.isAddPlacePopupOpen} onClose={props.onClose}>\r\n        <input type=\"text\" name=\"name\" className=\"popup__input popup__input_type_name\" placeholder=\"Название\" />\r\n        <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n        <input type=\"text\" name=\"link\" className=\"popup__input popup__input_type_link-url\" placeholder=\"Ссылка на картинку\" />\r\n        <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n        <button name=\"submit\" className=\"button popup__button\" disabled={true}>+</button>\r\n      </PopupWtihForm>\r\n\r\n      <PopupWtihForm id='popup-edit' title='Редактировать профиль' isOpen={props.isEditProfilePopupOpen} onClose={props.onClose}>\r\n        <input type=\"text\" name=\"name\" autoComplete=\"off\" className=\"popup__input popup__input_type_name\" placeholder=\"Имя\" />\r\n        <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n        <input type=\"text\" name=\"about\" autoComplete=\"off\" className=\"popup__input popup__input_type_about\" placeholder=\"О себе\" />\r\n        <span className='popup__error popup__error_hidden'>Текст ошибки 2</span>\r\n        <button className=\"button popup__button popup__button_active\" id='save-profile'>Сохранить</button>\r\n       </PopupWtihForm>         \r\n\r\n      <ImagePopup onClose={props.onClose} selectedCard={props.card}/>\r\n       \r\n      </>  \r\n    )   \r\n}\r\n\r\nexport default Main;\r\n\r\n/*<div className=\"popup\" id='popup-add'>\r\n        <div className=\"popup__content\">\r\n          <img src={close} alt=\"\" className=\"popup__close\" id=\"close-new-place\" />\r\n          <h3 className=\"popup__title\">Новое место</h3>\r\n          <form className=\"popup__form\" name=\"new\">\r\n              <input type=\"text\" name=\"name\" className=\"popup__input popup__input_type_name\" placeholder=\"Название\" />\r\n              <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n              <input type=\"text\" name=\"link\" className=\"popup__input popup__input_type_link-url\" placeholder=\"Ссылка на картинку\" />\r\n              <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n              <button name=\"submit\" className=\"button popup__button\" disabled={true}>+</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"popup\" id='popup-edit'>\r\n        <div className=\"popup__content\">\r\n          <img src={close} alt=\"\" className=\"popup__close\" id=\"close-edit-profile\" />\r\n          <h3 className=\"popup__title\">Редактировать профиль</h3>\r\n          <form className=\"popup__form\" name=\"edit\">\r\n              <input type=\"text\" name=\"name\" autoComplete=\"off\" className=\"popup__input popup__input_type_name\" placeholder=\"Имя\" />\r\n              <span className='popup__error popup__error_hidden'>Текст ошибки</span>\r\n              <input type=\"text\" name=\"about\" autoComplete=\"off\" className=\"popup__input popup__input_type_about\" placeholder=\"О себе\" />\r\n              <span className='popup__error popup__error_hidden'>Текст ошибки 2</span>\r\n              <button className=\"button popup__button popup__button_active\" id='save-profile'>Сохранить</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      ReactDOM.render((\r\n          <>\r\n            {cards.map((card, i) => (\r\n              <div className='place-card' key={i}>\r\n                <div className='place-card__image' style={{ backgroundImage: `url(${card.link})` }}>\r\n                  <button className='place-card__delete-icon' />\r\n                </div>\r\n                <div className='place-card__description'>\r\n                  <h3 className='place-card__name'>{card.name}</h3>\r\n                  <div className='place-card__like-container'>\r\n                    <button className='place-card__like-icon' />\r\n                    <p className='place-card__like-counter'>{card.likes.length}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ))\r\n\r\n        <template>\r\n          <div className='place-card'>\r\n            <div className='place-card__image'>\r\n              <button className='place-card__delete-icon' />\r\n            </div>\r\n            <div className='place-card__description'>\r\n              <h3 className='place-card__name'>Название</h3>\r\n              <div className='place-card__like-container'>\r\n                <button className='place-card__like-icon' />\r\n                <p className='place-card__like-counter'>69</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>  \r\n\r\n            React.useEffect(() => {\r\n      ReactDOM.render((\r\n        <>\r\n          {cards.map((card, i) => {\r\n          <div className='place-card' key={i}>\r\n            <div className='place-card__image' style={{backgroundImage: `url(${card.link})`}}>\r\n              <button className='place-card__delete-icon' />\r\n            </div>\r\n            <div className='place-card__description'>\r\n              <h3 className='place-card__name'>{card.name}</h3>\r\n              <div className='place-card__like-container'>\r\n                <button className='place-card__like-icon' />\r\n                <p className='place-card__like-counter'>{card.likes.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        })}\r\n        </>\r\n      ), document.querySelector('.places-list'))\r\n    }, [cards]);\r\n*/      ","import React from 'react';\nimport Header from'./Header.js';\nimport Main from './Main.js';\nimport './App.css';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n    <div className=\"root\">\n      <Header />\n      <Main \n        onEditProfile={handleEditProfileClick} \n        onAddPlace={handleAddPlaceClick} \n        isEditProfilePopupOpen={isEditProfilePopupOpen} \n        isAddPlacePopupOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onCardClick={handleCardClick}\n        card={selectedCard}\n      />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}